version: '3.8'
services:
  postgres:
    image: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./InfoCompanies-Data-Model:/csv
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
    ports:
      - '5432:5432'
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready', '-d', 'db_prod']
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s

  pgadmin4:
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: 'admin@example.com'
      PGADMIN_DEFAULT_PASSWORD: 'admin'
    depends_on:
      - postgres
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ./config/pgadmin/servers.json:/pgadmin4/servers.json
      - ./config/pgadmin/.pgpass:/pgpass
    entrypoint:
      - sh
      - -c
      - |
        echo "SERVER_MODE: 'False'" >> /pgadmin4/config_local.py
        cp /pgadmin4/servers.json /pgadmin4/servers/servers.json
        chmod 600 /pgpass
        echo "import os" >> /pgadmin4/config_local.py
        echo "os.putenv('PGPASSFILE', '/pgpass')" >> /pgadmin4/config_local.py
        /entrypoint.sh

  keycloak:
    image: quay.io/keycloak/keycloak:24.0.2
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: password
      KC_HTTPS_PORT: 8180
      KC_HEALTH_ENABLED: 'true'
      KC_HTTP_RELATIVE_PATH: /auth
      KC_HOSTNAME: ${HOSTNAME}
      KC_PROXY_HEADERS: 'xforwarded'
      PROXY_ADDRESS_FORWARDING: true
      OAUTH2_PROXY_CLIENT_SECRET: ${OAUTH2_PROXY_CLIENT_SECRET}
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      HOSTNAME_PORT: ${HOSTNAME_PORT}
      KC_HTTPS_CERTIFICATE_FILE: /opt/keycloak/conf/server.crt
      KC_HTTPS_CERTIFICATE_KEY_FILE: /opt/keycloak/conf/server.key
      KC_TRUSTSTORE_PATHS: /opt/truststore/server.p12
    ports:
      - '8180:8180'
    volumes:
      - ./config/keycloak:/opt/keycloak/data/import
      - ./config/keycloak/theme:/opt/keycloak/providers
      - ./config/certs/server.crt:/opt/keycloak/conf/server.crt
      - ./config/certs/server.key:/opt/keycloak/conf/server.key
      - ./config/certs/server.p12:/opt/truststore/server.p12
    command: ['start', '--import-realm']
    healthcheck:
      test: timeout 10s bash -c ':> /dev/tcp/localhost/8180'
      interval: 60s
      timeout: 30s
      retries: 5
      start_period: 25s

  scraping:
    build: ./InfoCompanies-Scraping-API
    env_file:
      - ./InfoCompanies-Scraping-API/.env

  backend:
    build:
      context: .
      dockerfile: InfoCompanies-API/Dockerfile
      args:
        - CONFIG_PATH=./config/certs
    env_file:
      - ./InfoCompanies-API/.env
    environment:
      - SERVER_SSL_CERTIFICATE=/app/config/certs/server.crt
      - SERVER_SSL_CERTIFICATE_PRIVATE_KEY=/app/config/certs/server.key
      - SERVER_SSL_KEY_STORE=/app/config/certs/server.p12
      - SERVER_SSL_KEY_STORE_PASSWORD=changeit
      - SERVER_SSL_KEY_STORE_TYPE=PKCS12
      - SERVER_SSL_KEY_ALIAS=myalias
      - HOSTNAME=${HOSTNAME}
      - STRIPE_API_KEY=${STRIPE_API_KEY}
      - STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET}
      - STRIPE_PRICE_ID_FREE=${STRIPE_PRICE_ID_FREE}
      - STRIPE_PRICE_ID_BASIC=${STRIPE_PRICE_ID_BASIC}
      - STRIPE_PRICE_ID_PREMIUM=${STRIPE_PRICE_ID_PREMIUM}
    volumes:
      - ./config/certs:/app/config/certs
    depends_on:
      postgres:
        condition: service_healthy
      keycloak:
        condition: service_healthy

  nginx:
    build:
      context: .
      dockerfile: InfoCompanies-Front/Dockerfile
      args:
        - CONFIG_PATH=./config
    ports:
      - '443:443'
    env_file:
      - ./InfoCompanies-Front/.env
    environment:
      - VITE_PROXY_BASE_URL=${FULL_DOMAIN}
      - STRIPE_PRICE_ID_FREE=${STRIPE_PRICE_ID_FREE}
      - STRIPE_PRICE_ID_BASIC=${STRIPE_PRICE_ID_BASIC}
      - STRIPE_PRICE_ID_PREMIUM=${STRIPE_PRICE_ID_PREMIUM}
    volumes:
      - ./config/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./config/certs:/etc/nginx/certs
    depends_on:
      - backend
      - oauth2-proxy

  redis:
    image: redis
    ports:
      - '6379:6379'

  oauth2-proxy:
    image: quay.io/oauth2-proxy/oauth2-proxy:latest
    ports:
      - '4180:4180'
    environment:
      OAUTH2_PROXY_PROVIDER: 'keycloak-oidc'
      OAUTH2_PROXY_CLIENT_ID: 'spring-ba-infocompanies'
      OAUTH2_PROXY_REDIRECT_URL: 'https://${HOSTNAME_PORT}/oauth2/callback'
      # Find the client secret in realm-export.json
      OAUTH2_PROXY_CLIENT_SECRET: ${OAUTH2_PROXY_CLIENT_SECRET}
      OAUTH2_PROXY_OIDC_ISSUER_URL: 'https://keycloak:8180/auth/realms/infoCompanies'
      OAUTH2_PROXY_EMAIL_DOMAINS: '*'
      OAUTH2_PROXY_BACKEND_LOGOUT_URL: 'https://keycloak:8180/auth/realms/infoCompanies/protocol/openid-connect/logout?post_logout_redirect_uri=https%3A%2F%2F${HOSTNAME}&id_token_hint={id_token}'
      OAUTH2_PROXY_COOKIE_SECRET: '${OAUTH2_PROXY_COOKIE_SECRET}'
      OAUTH2_PROXY_REVERSE_PROXY: 'true'
      OAUTH2_PROXY_COOKIE_SECURE: 'true'
      OAUTH2_PROXY_COOKIE_REFRESH: '59m'
      OAUTH2_PROXY_COOKIE_EXPIRE: '168h'
      OAUTH2_PROXY_COOKIE_DOMAIN: 'localhost'
      OAUTH2_PROXY_HTTP_ADDRESS: http://0.0.0.0:4180
      OAUTH2_PROXY_UPSTREAMS: 'http://backend:8080/'
      OAUTH2_PROXY_SESSION_STORE_TYPE: 'redis'
      OAUTH2_PROXY_REDIS_CONNECTION_URL: 'redis://redis:6379'
      OAUTH2_PROXY_PASS_AUTHORIZATION_HEADER: 'true'
      OAUTH2_PROXY_PASS_ACCESS_TOKEN: 'true'
      OAUTH2_PROXY_CODE_CHALLENGE_METHOD: 'S256'
      OAUTH2_PROXY_LOG_LEVEL: debug
      OAUTH2_PROXY_AUTH_LOGGING_FORMAT: '{{.Client}} - {{.Username}} [{{.Timestamp}}] [{{.Status}}] {{.Message}}'
      OAUTH2_PROXY_REQUEST_LOGGING_FORMAT: '{{.Client}} - {{.Username}} [{{.Timestamp}}] {{.Host}} {{.RequestMethod}} {{.Upstream}} {{.RequestURI}} {{.Protocol}} {{.UserAgent}} {{.StatusCode}} {{.ResponseSize}} {{.RequestDuration}}'
      OAUTH2_PROXY_STANDARD_LOGGING_FORMAT: '[{{.Timestamp}}] [{{.File}}] {{.Message}}'
      OAUTH2_PROXY_SSL_INSECURE_SKIP_VERIFY: 'true'
      # List of ip of stripe:
      OAUTH2_PROXY_WHITELIST_DOMAIN: 'localhost,localhost:3000,localhost:443,${HOSTNAME_PORT},keycloak:8180,3.18.12.63,3.130.192.231,13.235.14.237,13.235.122.149,18.211.135.69,35.154.171.200,52.15.183.38,54.88.130.119,54.88.130.237,54.187.174.169,54.187.205.235,54.187.216.72'
    command:
      - --whitelist-domain=${HOSTNAME}
      - --whitelist-domain=${HOSTNAME_PORT}
      - --whitelist-domain=localhost
      - --whitelist-domain=localhost:3000
      - --whitelist-domain=localhost:443
      - --whitelist-domain=keycloak:8180
      - --insecure-oidc-allow-unverified-email=true
      - --prefer-email-to-user=true
      - --set-xauthrequest=true
      - --skip-provider-button=true
      - --insecure-oidc-skip-issuer-verification=true
      - --skip-auth-route=/api/v1/stripe/webhook
    depends_on:
      keycloak:
        condition: service_healthy
      redis:
        condition: service_started

volumes:
  postgres_data:
  pgadmin_data:
